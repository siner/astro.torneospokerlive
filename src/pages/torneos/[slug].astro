---
import Layout from '../../layouts/Layout.astro'
import { getTorneo } from '../../lib/api'
import { marked } from 'marked'
import CardCasino from '../../components/casino/CardCasino'
import CardEvento from '../../components/evento/CardEvento'
import { formatDate, getTextColor } from '../../lib/utils'

const { slug } = Astro.params
const torneo = await getTorneo(slug as string)
if (!torneo) {
    return new Response(null, {
        status: 404,
        statusText: 'Not found',
    })
}
const descripcion = marked(torneo.descripcion)
const title = `Torneo ${torneo.nombre} - Torneos Poker Live`

const event = torneo.evento
const casino = torneo.casino
let backgroundColor = '#ffffff'
if (torneo.casino) backgroundColor = torneo.casino.color
const textColor = getTextColor(backgroundColor)
let { datestring, hour } = formatDate(torneo.fecha)

/** @type {import('schema-dts').Event} */
const schema = {
    '@context': 'https://schema.org',
    '@type': 'Event',
    eventAttendanceMode: 'https://schema.org/OfflineEventAttendanceMode',
    eventStatus: 'https://schema.org/EventScheduled',
    location: {
        '@type': 'Place',
        name: casino.name,
        address: {
            '@type': 'PostalAddress',
            streetAddress: '',
            addressLocality: '',
            postalCode: '',
            addressRegion: '',
            addressCountry: '',
        },
    },
    name: torneo.name,
    description:
        'Torneo de poker ' + torneo.name + ' en el casino ' + casino.name,
    organizer: {
        '@type': 'Organization',
        name: casino.name,
    },
    image: [casino.logo],
    startDate: torneo.date,
}
---

<Layout title={title}>
    <main class="md:flex gap-4 space-y-4 md:space-y-0 mx-5 mt-10">
        <script
            type="application/ld+json"
            dangerouslySetInnerHTML={{ __html: JSON.stringify(schema) }}
        ></script>
        <div class="md:w-8/12">
            <div
                class="text-2xl font-bold flex justify-between items-center p-5"
                style={{
                    backgroundColor: backgroundColor,
                    color: textColor,
                }}
            >
                <div
                    class="flex flex-col items-left md:flex-row md:items-center w-2/3"
                >
                    {torneo.nombre}
                </div>
                {
                    torneo.precio && torneo.precio > 0 && (
                        <div class="text-4xl font-bold w-1/3 text-right">
                            {torneo.precio}â‚¬
                        </div>
                    )
                }
            </div>
            <div class="p-5">
                <div class="font-bold">
                    {datestring} - {hour}
                </div>
                {descripcion && <div class="mt-6" set:html={descripcion} />}
            </div>
        </div>
        <div class="md:w-4/12 space-y-4">
            {event && <CardEvento evento={event} />}
            {casino && <CardCasino casino={casino} />}
        </div>
    </main>
</Layout>
